From 50fd548beee8fee8a26ccfb19f824f341fed7dc0 Mon Sep 17 00:00:00 2001
From: ik <igor@kiselev.spb.ru>
Date: Mon, 30 Jun 2014 11:37:52 -0700
Subject: [PATCH] Added tests for Nullable issues. (See #316, #361).

---
 .../NullableCloneParameter_Issue316.cs             | 63 ++++++++++++++++++++++
 Tests/SimpleTestCases/NullableField_Issue316.cs    | 48 +++++++++++++++++
 .../NullableModification_Issue361.cs               | 22 ++++++++
 Tests/SimpleTestCases/NullableNullAccess.cs        | 36 +++++++++++++
 Tests/Tests.csproj                                 |  4 ++
 5 files changed, 173 insertions(+)
 create mode 100644 Tests/SimpleTestCases/NullableCloneParameter_Issue316.cs
 create mode 100644 Tests/SimpleTestCases/NullableField_Issue316.cs
 create mode 100644 Tests/SimpleTestCases/NullableModification_Issue361.cs
 create mode 100644 Tests/SimpleTestCases/NullableNullAccess.cs

diff --git a/Tests/SimpleTestCases/NullableCloneParameter_Issue316.cs b/Tests/SimpleTestCases/NullableCloneParameter_Issue316.cs
new file mode 100644
index 0000000..8a2c94d
--- /dev/null
+++ b/Tests/SimpleTestCases/NullableCloneParameter_Issue316.cs
@@ -0,0 +1,63 @@
+﻿using System;
+
+public static class Program
+{
+    public static void Main(string[] args)
+    {
+        var a = new TestClass();
+        a.Prop = 10;
+        Console.WriteLine(a.Prop);
+
+        a.SetMutableAndUpdate();
+
+        Console.WriteLine(a.Mutable.Value.Value);
+    }
+}
+
+public class TestClass
+{
+    private int? _field;
+    private MutableStruct? _mutable;
+
+    public int? Prop
+    {
+        get { return _field; }
+        set { ProcessUpdate(ref _field, value); }
+    }
+
+    public MutableStruct? Mutable
+    {
+        get { return _mutable; }
+        set { ProcessUpdate(ref _mutable, value); }
+    }
+
+    public void ProcessUpdate<T>(ref T target, ref T input)
+    {
+        target = input;
+    }
+
+    public void ProcessUpdate<T>(ref T target, T input)
+    {
+        target = input;
+    }
+
+    public void SetMutableAndUpdate()
+    {
+        // Here we test of JSIL.CloneParameter for nullable struct with null and not null value.
+        MutableStruct? mutable = new MutableStruct?();
+        ProcessUpdate(ref _mutable, ref mutable);
+        mutable = new MutableStruct();
+        ProcessUpdate(ref _mutable, ref mutable);
+        mutable.Value.Increment();
+    }
+}
+
+public struct MutableStruct
+{
+    public int Value;
+
+    public void Increment()
+    {
+        Value++;
+    }
+}
\ No newline at end of file
diff --git a/Tests/SimpleTestCases/NullableField_Issue316.cs b/Tests/SimpleTestCases/NullableField_Issue316.cs
new file mode 100644
index 0000000..d301565
--- /dev/null
+++ b/Tests/SimpleTestCases/NullableField_Issue316.cs
@@ -0,0 +1,48 @@
+﻿using System;
+
+public static class Program
+{
+    public static void Main(string[] args)
+    {
+        var a = new TestClass();
+        if (a.Field.HasValue)
+        {
+            Console.WriteLine("Empty but HasValue");
+        }
+        if (a.Field != null)
+        {
+            Console.WriteLine("Empty but NotNull");
+        }
+        if (a.Field is int)
+        {
+            Console.WriteLine("Empty but Is Int");
+        }
+        if (a.Field is int?)
+        {
+            Console.WriteLine("Empty Is Int?");
+        }
+
+        a.Field = 10;
+        if (a.Field.HasValue)
+        {
+            Console.WriteLine("NonEmpty HasValue");
+        }
+        if (a.Field != null)
+        {
+            Console.WriteLine("NonEmpty NotNull");
+        }
+        if (a.Field is int)
+        {
+            Console.WriteLine("NonEmpty Is Int");
+        }
+        if (a.Field is int?)
+        {
+            Console.WriteLine("NonEmpty Is Int?");
+        }
+    }
+}
+
+public class TestClass
+{
+    public int? Field;
+}
\ No newline at end of file
diff --git a/Tests/SimpleTestCases/NullableModification_Issue361.cs b/Tests/SimpleTestCases/NullableModification_Issue361.cs
new file mode 100644
index 0000000..f15fba6
--- /dev/null
+++ b/Tests/SimpleTestCases/NullableModification_Issue361.cs
@@ -0,0 +1,22 @@
+﻿using System;
+
+public static class Program
+{
+    public static void Main(string[] args)
+    {
+        MutableStruct? b = new MutableStruct();
+        Console.WriteLine(b.Value.Value);
+        b.Value.Increment();
+        Console.WriteLine(b.Value.Value);
+    }
+}
+
+public struct MutableStruct
+{
+    public int Value;
+
+    public void Increment()
+    {
+        Value++;
+    }
+}
\ No newline at end of file
diff --git a/Tests/SimpleTestCases/NullableNullAccess.cs b/Tests/SimpleTestCases/NullableNullAccess.cs
new file mode 100644
index 0000000..edf7ec8
--- /dev/null
+++ b/Tests/SimpleTestCases/NullableNullAccess.cs
@@ -0,0 +1,36 @@
+﻿using System;
+
+public static class Program
+{
+    public static void Main(string[] args)
+    {
+        try
+        {
+            int? empty = null;
+            Console.WriteLine(empty.Value);
+        }
+        catch (InvalidOperationException)
+        {
+            Console.WriteLine("Expected InvalidOperationException");
+        }
+
+        try
+        {
+            StructWithMethod? empty2 = null;
+            empty2.Value.Method();
+        }
+        catch (InvalidOperationException)
+        {
+            Console.WriteLine("Expected InvalidOperationException");
+        }
+    }
+
+    public struct StructWithMethod
+    {
+        public void Method()
+        {
+            Console.WriteLine("StructWithMethod.Method");
+        }
+    }
+
+}
diff --git a/Tests/Tests.csproj b/Tests/Tests.csproj
index 9603718..bee6690 100644
--- a/Tests/Tests.csproj
+++ b/Tests/Tests.csproj
@@ -894,6 +894,10 @@
     <None Include="SimpleTestCases\InterfaceGenericCallWithGenericParameter_Issue348.cs" />
     <None Include="SimpleTestCases\ReflectionGenericMethodInvoke.cs" />
     <None Include="SimpleTestCases\ReflectionMethodArgumentTypes" />
+    <None Include="SimpleTestCases\NullableField_Issue316.cs" />
+    <None Include="SimpleTestCases\NullableCloneParameter_Issue316.cs" />
+    <None Include="SimpleTestCases\NullableModification_Issue361.cs" />
+    <None Include="SimpleTestCases\NullableNullAccess.cs" />
   </ItemGroup>
   <ItemGroup>
     <ProjectReference Include="..\JSIL\JSIL.csproj">
-- 
1.9.3

